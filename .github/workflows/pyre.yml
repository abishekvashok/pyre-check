name: pyre

on: [push, pull_request]

jobs:
  pyre:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: Install Dependencies
        run: |
          pip install -r requirements.txt
          sudo apt-get install ocaml ocaml-dune

      - name: Setup OCaml
        uses: avsm/setup-ocaml@v2
        with:
          ocaml-compiler: 4.10.2

      - name: Setup opam switch
        run: |
          opam switch create 4.10.2
          echo "OPAM_SWITCH_PREFIX=$HOME/.opam/4.10.2" >> $GITHUB_ENV
          echo "CAML_LD_LIBRARY_PATH=$HOME/.opam/4.10.2/lib/stublibs:$HOME/.opam/4.10.2/lib/ocaml/stublibs:$HOME/.opam/4.10.2/lib/ocam" >> $GITHUB_ENV
          echo "$HOME/.opam/4.10.2/bin" >> $GITHUB_PATH
          echo "/home/opam/.opam/4.10.2/bin" >> $GITHUB_PATH

      - name: Build Pyre-check
        run: |
          mkdir typeshed
          unzip -qq ./stubs/typeshed/typeshed.zip -d ./typeshed/
          ./scripts/setup.sh --local --no-tests
          make -C source
          echo "PYTHONPATH=$GITHUB_WORKSPACE:$PYTHONPATH" >> $GITHUB_ENV
          echo "pythonLocation=$GITHUB_WORKSPACE:$pythonLocation" >> $GITHUB_ENV
          echo "PYRE_BINARY=$GITHUB_WORKSPACE/source/_build/default/main.exe" >> $GITHUB_ENV
          echo "PYRE_TYPESHED=$GITHUB_WORKSPACE/typeshed/typeshed-master/" >> $GITHUB_ENV

      - name: Running Pyre-check
        run: |
          python3 -m client.pyre --output=sarif check > sarif.json

      - name: Expose SARIF Results
        uses: actions/upload-artifact@v2
        with:
          name: SARIF Results
          path: sarif.json

      - name: Upload SARIF Results
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: sarif.json

      - name: Fail Command On Errors
        run: |
          if [ "$(cat sarif.json | grep 'ruleId')" != "" ]; then exit 1; fi
